"""add users

Revision ID: f321cc85be80
Revises: 158d42af6d6d
Create Date: 2025-05-18 19:12:04.716074

"""

from typing import Sequence, Union

from alembic import op
from sqlalchemy import orm
import bcrypt

from src.models.user import User


# revision identifiers, used by Alembic.
revision: str = "f321cc85be80"
down_revision: Union[str, None] = "158d42af6d6d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def create_hash_password(password: str) -> bytes:
    """
    РЎРѕР·РґР°РЅРёРµ С…РµС€ РїР°СЂРѕР»СЏ
    :param password: РїР°СЂРѕР»СЊ
    :type password: str
    :rtype: bytes
    :return: С…РµС€ Р·РЅР°С‡РµРЅРёРµ РїР°СЂРѕР»СЏ
    """
    salt = bcrypt.gensalt()
    pwd_bytes: bytes = password.encode()
    return bcrypt.hashpw(pwd_bytes, salt)


def upgrade() -> None:
    """Upgrade schema."""
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    password_for_user1: str = create_hash_password("1qaz!QAZ").decode()
    user1: User = User(
        username="Admin1",
        email="admin1@lib.ru",
        hashed_password=password_for_user1,
        is_superuser=True,
    )
    password_for_user2: str = create_hash_password("2wsx@WSX").decode()
    user2: User = User(
        username="Admin2",
        email="admin2@lib.ru",
        hashed_password=password_for_user2,
        is_superuser=True,
    )
    session.add_all([user1, user2])
    session.commit()


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
